skills:
  - type: STR_SPRINT_SKILL
    costUse:
      time: 1 
    tags:
      ArmorAbility: 1
      AbilityCooldown: 2 
  - type: STR_CAMO_SKILL
    costUse:
      time: 1 
    tags:
      ArmorAbility: 2
      AbilityCooldown: 2
  - type: STR_DROP_SHIELD_SKILL
    costUse:
      time: 1 
    tags:
      ArmorAbility: 3
      AbilityCooldown: 2
  - type: STR_HOLO_SKILL
    costUse:
      time: 1
    compatibleWeapons:
      - STR_HOLO_ITEM
    checkHandsOnly: false
    targetMode: 9
    tags:
      ArmorAbility: 4
      AbilityCooldown: 2
  - type: STR_LOCK_SKILL
    costUse:
      time: 1 
    tags:
      ArmorAbility: 5
      AbilityCooldown: 2


soldiers:
  - type: STR_SPARTAN_III
    skillIconSprite: 10
    skills:
      - STR_SPRINT_SKILL
      - STR_DROP_SHIELD_SKILL
      - STR_HOLO_SKILL
      - STR_CAMO_SKILL
      - STR_LOCK_SKILL
items:
#   - type: STR_ACTIVE_CAMO
#     battleType: 6
#     tuUse: 1
#     specialIconSprite: 10
#     medikitActionName: STR_ACTIVATE_CAMO
#     stimulant: 999
#     medikitType: 2
#     medikitTargetSelf: true
#     fixedWeapon: true
#     recover: false
#     specialUseEmptyHand: true
#     specialUseEmptyHandShow: false
#     tags:
#       ArmorAbility: 1

  - type: STR_SPRINT_ITEM
    size: 0.1
    weight: 10
    bigSprite: 100
    battleType: 10
    power: 1
    armor: 60
    invWidth: 2
    invHeight: 2
    recover: true
    tags:
      ItemAbility: 1
  - type: STR_CAMO_ITEM
    size: 0.1
    weight: 10
    bigSprite: 101
    battleType: 10
    power: 1
    armor: 60
    invWidth: 2
    invHeight: 2
    recover: true
    tags:
      ItemAbility: 2
  - type: STR_DROP_SHIELD_ITEM
    size: 0.1
    weight: 10
    bigSprite: 100
    battleType: 10
    power: 1
    armor: 60
    invWidth: 2
    invHeight: 2
    recover: true
    tags:
      ItemAbility: 3
  - type: STR_HOLO_ITEM
    size: 0.1
    weight: 10
    bigSprite: 100
    battleType: 1
    power: 1
    clipSize: -1
    tuAimed: 101
    accuracyAimed: 100
    maxRange: 1
    armor: 60
    invWidth: 2
    invHeight: 2
    recover: true
    tags:
      ItemAbility: 4
  - type: STR_LOCK_ITEM
    size: 0.1
    weight: 10
    bigSprite: 100
    battleType: 10
    power: 1
    armor: 60
    invWidth: 2
    invHeight: 2
    recover: true
    tags:
      ItemAbility: 5

extended:
  tags:
    RuleItem:
      ItemAbility: int
    RuleSkill:
       ArmorAbility: int
       AbilityCooldown: int
    BattleUnit:
      ArmorCooldown: int
      ActiveCamo: int
      Sprint: int
      Lock: int


  scripts:
    newTurnUnit:
      - offset: 1
        code: |
          var int armorcooldown;
          var int activecamo;
          var int sprint;
          var int lock;

          var int maxtu;
          var int maxreaction;

          var ptr GeoscapeSoldier soldier;

          if eq side FACTION_PLAYER;
            unit.getTag armorcooldown Tag.ArmorCooldown;
            sub armorcooldown 1;
            unit.setTag Tag.ArmorCooldown armorcooldown;

            unit.getTag activecamo Tag.ActiveCamo;
            sub activecamo 1;
            unit.setTag Tag.ActiveCamo activecamo;
            
            unit.getTag sprint Tag.Sprint;
            sub sprint 1;
            unit.setTag Tag.Sprint sprint;
            if le sprint 0;
              unit.getGeoscapeSoldier soldier;
              soldier.Stats.getTimeUnits maxtu;
              unit.Stats.setTimeUnits maxtu;
              unit.setTimeUnits maxtu;

              soldier.Stats.getReactions maxreaction;
              unit.Stats.setReactions maxreaction;
            end;

            unit.getTag lock Tag.Lock;
            sub lock 1;
            unit.setTag Tag.Lock lock;



          end;
          return;



    skillUseUnit:
      - offset: 1
        code: |
          var int armorability;
          var int itemability;
          var int armorcooldown;
          var int abilitycooldown;
          
          var int kneeling;

          var int maxtu;
          var int maxreaction;

          var ptr RuleInventory ability_slot;
          var ptre BattleItem ability_item;


          actor.getTag armorcooldown Tag.ArmorCooldown;
          if gt armorcooldown 0;
            battle_game.flashMessage "STR_ON_COOLDOWN";
            set continue_action 0;
            return;
          end;

          rules.getRuleInventory ability_slot "STR_ARMOR_ABILITY_SLOT";
          actor.getInventoryItem ability_item ability_slot;
          ability_item.getTag itemability Tag.ItemAbility;

          skill.getTag armorability Tag.ArmorAbility;

          if neq armorability itemability;
            battle_game.flashMessage "STR_WRONG_ABILITY";
            set continue_action 0;
            return;
          end; 

          actor.isKneeled kneeling;
          if and eq armorability 5 neq kneeling 1;
            battle_game.flashMessage "STR_NOT_KNEELING";
            set continue_action 0;
            return;
          end;

          skill.getTag abilitycooldown Tag.AbilityCooldown;
          actor.setTag Tag.ArmorCooldown abilitycooldown;


          if eq armorability 1; #Sprint
            actor.setTag Tag.Sprint 1;
            actor.Stats.getTimeUnits maxtu;
            add maxtu 40;
            actor.Stats.setTimeUnits maxtu;
            actor.addTimeUnits 40;

            actor.Stats.getReactions maxreaction;
            sub maxreaction 40;
            actor.Stats.setReactions maxreaction;
          end;

          if eq armorability 2; #Camo
            actor.setTag Tag.ActiveCamo 1;
          end;

          if eq armorability 5; #Lock
            actor.setTag Tag.Lock 1;
            actor.setTimeUnits 0;
          end;

          return;


    visibilityUnit:
        - offset: 1
          code: |
            var int activecamo;

            target_unit.getTag activecamo Tag.ActiveCamo;
            if eq activecamo 1;
              set current_visibility 5;
            end;


            return current_visibility visibility_mode;


    hitUnit:
        - offset: 1
          code: |
            var int lock;

            unit.getTag lock Tag.Lock;

            if eq lock 1;
              set power 0;
            end;

            return power part side;






    recolorUnitSprite:
        - offset: 2
          code: |
            var int activecamo;
            var int frame;
            var int temp;
            var int newshade;

            unit.getTag activecamo Tag.ActiveCamo;

            if eq activecamo 1;
              set frame anim_frame;
              if gt frame 20;
                set temp frame;
                muldiv temp 1 20;
                mul temp 20;
                sub frame temp;
                if lt frame 0;
                  add frame 20;
                end;
              end;
              if and lt frame 4 neq old_pixel 0;
                get_shade newshade new_pixel;
                add newshade frame;
                add newshade 3;
                set_shade new_pixel newshade;
                set_color new_pixel COLOR_X1_NULL;
                if ge newshade 16;
                  set new_pixel 0;
                end;   
              else ge frame 4;
                set new_pixel 0;
              end;
            end;
            return new_pixel;

        - offset: 3
          code: |
            var int lock;
            var int frame;
            var int temp;
            var int newshade;

            unit.getTag lock Tag.Lock;

            if eq lock 1;
              set frame anim_frame;
              if gt frame 4;
                set temp frame;
                muldiv temp 1 4;
                mul temp 4;
                sub frame temp;
                if lt frame 0;
                  add frame 4;
                end;
              end;
              if and lt frame 4 neq old_pixel 0;
                get_shade newshade new_pixel;
                add newshade frame;
                sub newshade 3;
                if ge newshade 16;
                  set newshade 15;
                end;
                if lt newshade 0;
                  set newshade 0;
                end;
                set_shade new_pixel newshade;
                set_color new_pixel COLOR_X1_BLUE1;
              end;
            end;
            return new_pixel;

